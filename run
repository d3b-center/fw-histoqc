#!/bin/bash
#
#	template based on:  https://github.com/scitran-apps/fsl-bet/blob/master/run
#
#

CONTAINER="[histoQC]"
echo -e "$CONTAINER  Initiated"



###############################################################################
## Built to flywheel-v0 spec.
FLYWHEEL_BASE=/flywheel/v0
OUTPUT_DIR=$FLYWHEEL_BASE/output
input_im_DIR=$FLYWHEEL_BASE/input/input_image
MANIFEST=$FLYWHEEL_BASE/manifest.json
CONFIG_FILE=$FLYWHEEL_BASE/config.json

###############################################################################
## Configure the ENV
export USER=Flywheel

###############################################################################
## Execute the main processes
function jsonValue() {
KEY=$1
num=$2
awk -F"[,:}]" '{for(i=1;i<=NF;i++){if($i~/'$KEY'\042/){print $(i+1)}}}' | tr -d '"' | sed -n ${num}p
}

## get all user configurations
if [[ -f $CONFIG_FILE ]]; then
  echo "$CONTAINER  $CONFIG_FILE found. Loading config..."


  output_fn="$(cat $CONFIG_FILE | jsonValue output_file_name)"

else
  echo "$CONTAINER  $CONFIG_FILE not found. Loading defaults from $MANIFEST..."


  output_fn="$(cat $MANIFEST | jsonValue output_file_name default)"

fi


## Find the input files
input_im_file=$(find $input_im_DIR/* -maxdepth 0 -type f -name "*.svs*")
echo "$input_im_file"
echo "file_name =" $(basename "${input_im_file}")


## If necessary input files are found, run the thing
if [[ -f $input_im_file ]] ; then

  HistoQC_dir=/opt/HistoQC   # path to install (in Docker container)

  echo "$CONTAINER  Running HistoQC"
  python3 -m histoqc -c v2.1 -n 3 "*.svs"
   
 

################# Finish up #################
  STATUS=$?
else
  echo "$CONTAINER  Input files not found!"
  exit 1
fi

# Check exit status
if [[ $STATUS == 0 ]]
  then
    echo -e "$CONTAINER  Done!"

  else
    echo "$CONTAINER  command returned a non-zero exit code = [$STATUS]."
    exit 1
fi

exit 0
